!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";function i(t){return"string"==typeof t&&(t=document.querySelector(t)),t&&1===t.nodeType?t:(e=`query filed [${t}]`,console.warn(`[dChart]: ${e}`),document.createElement("div"));var e}n.r(e);const o=["fillStyle","strokeStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","lineCap","lineJoin","lineWidth","miterLimit","font","textAlign","textBaseline"];function r(t,e){return t.currentStyle?t.currentStyle[e]:window.getComputedStyle(t,null)[e]}let s=0;class l{constructor(t){this.points=t.points||[],this.style=t.style||{lineWidth:1,strokeStyle:"#000"},this.needCache=t.needCache||!1,this.name=t.name||`lineid${s++}`}}function a(t,e,n,i){const o=e[0];t.moveTo(o.x+n,o.y+n),e.forEach(e=>{t.lineTo(e.x+n,e.y+n)}),i&&t.stroke()}class c{constructor(t){this.init(t)}initContext(t){const e=this.container=i(t.el),n=document.createElement("canvas");e.append(n),this.ctx=n.getContext("2d"),n.height=parseFloat(t.height||r(e,"height")),n.width=parseFloat(t.width||r(e,"width")),n.style.height=n.height+"px",n.style.width=n.width+"px",this.canvas=n}initState(t){this.lineMap={},this.PIXOFFSET=.5}init(t){this.initContext(t),this.initState(t)}}c.prototype.drawLine=function(t){const e=this.ctx;var n;t=(n=t)instanceof l?n:Array.isArray(n)?new l({points:n}):new l(n),console.log(t,"line");const i=t.style.lineWidth%2==1?this.PIXOFFSET:0;console.log(i,"PIXOFFSET"),t.isRestore&&e.restore(),t.style&&function(t,e){if(t&&e)for(let n in e)o.indexOf(n)>-1&&(t[n]=e[n])}(e,t.style),t&&t.points&&(Array.isArray(t.points[0])?(e.beginPath(),t.points.forEach(t=>{a(e,t,i)}),e.stroke()):(e.beginPath(),a(e,t.points,i,!0))),t.needCache&&!this.lineMap.hasOwnProperty(t.name)&&(this.lineMap[t.name]=t)},window.dChart=function(t){return console.count("ss"),new c(t)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,